---
# Deploying:
#  - PXE config
#  - install-config.yaml
#  - network customization
#
# REQUIRES:
#  - variable "node" according to vms structure

    
# Create the OCP installation directory and populate it

- name: Delete dirs
  become: no
  file:
    path: /home/kiosk/{{ item }}
    state: absent
  loop: 
    - "{{ node.cluster }}"
    - tmp

- name: Make sure dirs exists
  become: no
  file:
    path: /home/kiosk/{{ item }}
    state: directory
    mode: 0755
  loop: 
    - "{{ node.cluster }}"
    - tmp



- name: Place the install config to workdir
  become: no
  template:
    src: templates/install-config-sno.yaml.j2
    dest: /home/kiosk/{{ node.cluster }}/install-config.yaml
    mode: 0644


- name: Create a backup copy of install config
  become: no
  copy:
    src: /home/kiosk/{{ node.cluster }}/install-config.yaml
    dest: /home/kiosk/install-config-{{ node.cluster }}.yaml
    remote_src: no
    mode: 0644


- name: Create the ignition file
  become: no
  shell: openshift-install create ignition-configs
  args:
    chdir: /home/kiosk/{{ node.cluster }}

- name: Move {{ item }} ignition files to tmp dir to process butane configurations
  become: no
  copy:
    src: /home/kiosk/{{ node.cluster }}/{{ item }}.ign
    dest: /home/kiosk/tmp/{{ item }}.ign
    remote_src: no
    mode: 0644
  loop:
    - bootstrap
    - master      
- name: Delete {{ item }} ignition file
  become: no
  file:
    state: absent
    path: /home/kiosk/{{ node.cluster }}/{{ item }}.ign
  loop:
    - bootstrap
    - master
    - worker


- name: Deploy the environment workarounds
  become: no
  template:
    src: templates/{{ item }}.bu.j2
    dest: /home/kiosk/{{ item }}.yaml
    mode: 0644
  loop:
    - bootstrap
    - master

- name: Process {{ item }} config with butane
  become: no
  shell: butane {{ item }}.yaml -d /home/kiosk/tmp -o /home/kiosk/{{ node.cluster }}/{{ item }}.ign  
  args:
    chdir: /home/kiosk
  loop:
    - bootstrap
    - master

- name: Publish {{ item }} ignition configs
  copy:
    src: /home/kiosk/{{ node.cluster }}/{{ item }}.ign
    dest: "{{ ignitions_directory }}"
    remote_src: yes
    mode: 0644
    owner: root
    group: root
  loop:
    - bootstrap
    - master

# Create a backup copy of cluster auth files
- name: Create a backup copy of cluster auth files
  become: no
  copy:
    src: /home/kiosk/{{ node.cluster }}/auth/{{ item }}
    dest: /home/kiosk/{{ item }}-{{ node.cluster }}
    remote_src: yes
    mode: 0644
  loop:
    - kubeadmin-password
    - kubeconfig

...
