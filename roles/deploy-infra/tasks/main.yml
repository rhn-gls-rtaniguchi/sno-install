---
# Deploys the infrastructure modifications needed to support SNOx node installation:
#
# - DNS zone files
# - DNS zone configuration
# - bastion zone delegation
# - DHCP server modifications
#
# REQUIRES:
#  - variable "node" according to vms structure
#
#
# If you have an issue with a network adapter that cannot come up at all during PXE boot, consider adding:
# pcie_aspm=off pcie_port_pm=off to the linuxefi line


- name: Deploy EFI config file
  ansible.builtin.blockinfile:
    insertafter: '# BEGIN ANSIBLE MANAGED DHCP CONFIG'
    path: /var/lib/tftpboot/grub.cfg
    block: |
      menuentry 'Install Single Node OpenShift' --class fedora --class gnu-linux --class gnu --class os {
      linuxefi rhcos-vmlinuz initrd=rhcos-initrd.img pcie_aspm=off pcie_port_pm=off rd.neednet=1 console=tty0 coreos.live.rootfs_url={{ images_url }}/rhcos-{{ rhcos_ver }}-x86_64-live-rootfs.x86_64.img random.trust_cpu=on ignition.firstboot ignition.platform.id=metal coreos.inst.ignition_url={{ ignitions_url }}/{{ node.cluster }}-{{ node.name }}.ign
      initrdefi rhcos-initrd.img
      } 


- name: Publish forward DNS zone
  template:
    src: templates/sno.zone.j2
    dest: /var/named/{{ node.cluster }}.example.com.zone
    mode: 0640
    owner: root
    group: named
  notify:
    - reload_named

- name: Configure DNS to load the published zone
  blockinfile:
    path: /etc/named.conf
    insertafter: "^# BEGIN ANSIBLE MANAGED DNS ZONES$"
    state: present
    block: |
      zone "{{ node.cluster }}.example.com" { 
            type master; 
            file "{{ node.cluster }}.example.com.zone";
            allow-update { none; }; 
      };
  notify:
    - reload_named

- name: Update reverse DNS zone for SNO
  blockinfile:
    path: /var/named/254.25.172.in-addr.arpa.zone
    insertafter: "^; BEGIN DYNAMIC rZONE RECORDS$"
    block: |
      {{ node.ip | regex_replace('^172.25.254.', '') }}      IN PTR {{ node.name }}.{{ node.cluster }}.example.com.
    state: present
  register: zoneupdate



- name: Extract the serial if rzone was updated
  shell: grep -i serial /var/named/254.25.172.in-addr.arpa.zone | awk '{ print $1 }'
  register: rzone_serial_result
  when: zoneupdate.changed

- name: Bump up the serial if rzone was updated
  set_fact:
    rzone_serial: "{{ rzone_serial_result.stdout | int + 1 }}"
  when: zoneupdate.changed

- name: Update the serial number of reverse DNS zone
  lineinfile:
    path: /var/named/254.25.172.in-addr.arpa.zone
    regexp: "(?i); serial"
    line: "		{{ rzone_serial }} ; serial"
    state: present
  when: zoneupdate.changed
  notify:
    - reload_named

- name: Make sure DHCP server recognizes SNO
  blockinfile:
    path: /etc/dhcp/dhcpd.conf
    insertafter: "^# BEGIN ANSIBLE MANAGED DHCP CONFIG$"
    block: |
      host {{ node.name }}-{{ node.cluster }} { 
            hardware ethernet {{ node.mac | regex_replace("^01-", "") | regex_replace("-", ":") }}; 
            fixed-address {{ node.ip }}; 
            option host-name "{{ node.name }}.{{ node.cluster }}.example.com"; 
            option domain-name "{{ node.cluster }}..example.com"; 
            option domain-search "{{ node.cluster }}.example.com"; 
      }
    state: present
  notify: restart_dhcpd

...
