---
# Deploying:
#  - PXE config
#  - install-config.yaml
#  - network customization
#
# REQUIRES:
#  - variable "node" according to vms structure

    
# Create the OCP installation directory and populate it

- name: Delete dirs
  file:
    path: "{{ item }}"
    state: absent
  loop: 
    - /home/kiosk/{{ node.cluster }}
    - /home/kiosk/tmp
    - /var/lib/tftpboot/rhcos-initrd.img

- name: Make sure dirs exists
  become: no
  file:
    path: /home/kiosk/{{ node.cluster }}
    state: directory
    mode: 0755

- name: Place the install config to workdir
  become: no
  template:
    src: templates/install-config-sno.yaml.j2
    dest: /home/kiosk/{{ node.cluster }}/install-config.yaml
    mode: 0644

- name: Create a backup copy of install config
  become: no
  copy:
    src: /home/kiosk/{{ node.cluster }}/install-config.yaml
    dest: /home/kiosk/install-config-{{ node.cluster }}.yaml
    remote_src: no
    mode: 0644


- name: Create installation manifests
  become: no
  shell: openshift-install create manifests
  args:
    chdir: /home/kiosk/{{ node.cluster }}


- name: Deploy the workaround
  become: no
  template:
    src: templates/workaround.bu.j2
    dest: /home/kiosk/workaround.bu
    mode: 0644

- name: Process network config with butane
  become: no
  shell: butane workaround.bu -o {{ node.cluster }}/openshift/02-bootstrap-workaround.yaml
  args:
    chdir: /home/kiosk


- name: Deploy the network config customization
  become: no
  template:
    src: templates/netcfg.bu.j2
    dest: /home/kiosk/netcfg.bu
    mode: 0644


- name: Process network config with butane
  become: no
  shell: butane netcfg.bu -o {{ node.cluster }}/openshift/01-master-network.yaml
  args:
    chdir: /home/kiosk



- name: Create the ignition file
  become: no
  shell: openshift-install create single-node-ignition-config
  args:
    chdir: /home/kiosk/{{ node.cluster }}

- name: Publish ignition configs
  copy:
    src: /home/kiosk/{{ node.cluster }}/bootstrap-in-place-for-live-iso.ign
    dest: "{{ ignitions_directory }}/{{ node.cluster }}-{{ node.name }}.ign"
    remote_src: yes
    mode: 0644
    seuser: system_u
    owner: root
    group: root

- name: Deploy the network config to connect
  become: no
  template:
    src: templates/network.nmconnection.j2
    dest: /home/kiosk/{{ node.network_adapter }}.nmconnection
    mode: 0644

- name: Create the custom initrd with network support
  shell: coreos-installer pxe customize --dest-device {{ node.bootstrap_disk }} --dest-console tty0 --network-keyfile /home/kiosk/{{node.network_adapter}}.nmconnection -o /var/lib/tftpboot/rhcos-initrd.img /content/coreos/x86_64/rhcos-{{ rhcos_ver }}-x86_64-live-initramfs.x86_64.img 
  args:
    chdir: /home/kiosk/{{ node.cluster }}

- name: Change custom initrd with network support
  file: 
    path: /var/lib/tftpboot/rhcos-initrd.img
    mode: 0644
    seuser: system_u



# Create a backup copy of cluster auth files
- name: Create a backup copy of cluster auth files
  become: no
  copy:
    src: /home/kiosk/{{ node.cluster }}/auth/{{ item }}
    dest: /home/kiosk/{{ item }}-{{ node.cluster }}
    remote_src: yes
    mode: 0644
  loop:
    - kubeadmin-password
    - kubeconfig

...
